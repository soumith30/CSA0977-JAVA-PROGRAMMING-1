import java.util.Scanner;

public class PalindromeChecker {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Palindrome Checker Program");
        System.out.println("1. Check if a string is palindrome");
        System.out.println("2. Check if a number is palindrome");
        System.out.print("Enter your choice (1 or 2): ");
        int choice = scanner.nextInt();
        scanner.nextLine(); 
        switch (choice) {
            case 1:
                System.out.print("Enter a string: ");
                String str = scanner.nextLine();
                if (isPalindrome(str)) {
                    System.out.println("The string '" + str + "' is a palindrome.");
                } else {
                    System.out.println("The string '" + str + "' is not a palindrome.");
                }
                break;
            case 2:
                System.out.print("Enter a number: ");
                int number = scanner.nextInt();
                if (isPalindrome(number)) {
                    System.out.println("The number " + number + " is a palindrome.");
                } else {
                    System.out.println("The number " + number + " is not a palindrome.");
                }
                break;
            default:
                System.out.println("Invalid choice. Please enter either 1 or 2.");
        }

        scanner.close();
    }
    private static boolean isPalindrome(String str) {
        str = str.toLowerCase().replaceAll("[^a-zA-Z0-9]", "");        int left = 0;
        int right = str.length() - 1;

        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
    private static boolean isPalindrome(int number) {
        int originalNumber = number;
        int reversedNumber = 0;

        while (number != 0) {
            int remainder = number % 10;
            reversedNumber = reversedNumber * 10 + remainder;
            number = number / 10;
        }
        return originalNumber == reversedNumber;
    }
}
